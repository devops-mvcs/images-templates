#
# SonarQube template. Deploys a Postgrsql instance that needs a persistent volume to bind to (not provisioned here).
# SonarQube also needs a persistent volume not provisioned here (it must e already available).
#
apiVersion: v1
kind: Template
parameters:
- name: POSTGRESQL_USER
  value: sonarqube
  required: true
- name: POSTGRESQL_PASSWORD
  from: '[a-zA-Z0-9]{16}'
  generate: expression
  required: true
- name: POSTGRESQL_DATABASE
  value: sonarqube
  required: true
- name: SONARQUBE_VERSION
  displayName: SonarQube version
  value: "6.7"
  required: true
metadata:
  name: sonarqube
  annotations:
    description: SonarQube
    iconClass: icon-stackoverflow
    openshift.io/display-name: SonarQube
    tags: ci,sonar,sonarqube,ci-cd,integration,jenkins
    openshift.io/provider-display-name: Marcus Sacramento
objects:
########################################################################################################################
# Give sufficient privileges to the service account
########################################################################################################################
- apiVersion: v1
  groupNames: null
  kind: RoleBinding
  metadata:
    name: default_edit
  roleRef:
    name: edit
  subjects:
  - kind: ServiceAccount
    name: default
########################################################################################################################
# Sonarqube Postgresql service
########################################################################################################################
- apiVersion: v1
  kind: Service
  metadata:
    name: postgresql-sonarqube
  spec:
    ports:
    - name: postgresql
      port: 5432
      protocol: TCP
      targetPort: 5432
    selector:
      deploymentconfig: postgresql-sonarqube
    sessionAffinity: None
    type: ClusterIP
########################################################################################################################
# Sonarqube Postgresql persistent volume claim
########################################################################################################################
- kind: PersistentVolumeClaim
  apiVersion: v1
  metadata:
    name: postgresql-sonarqube
  spec:
    accessModes:
      - ReadWriteOnce
    resources:
      requests:
        storage: 1Gi
########################################################################################################################
# Sonarqube Postgresql deployment configuration
########################################################################################################################
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: postgresql-sonarqube
  spec:
    replicas: 1
    selector:
      deploymentconfig: postgresql-sonarqube
    strategy:
      recreateParams:
        timeoutSeconds: 600
      type: Recreate
    template:
      metadata:
        labels:
          deploymentconfig: postgresql-sonarqube
      spec:
        containers:
        - env:
          - name: POSTGRESQL_USER
            value: ${POSTGRESQL_USER}
          - name: POSTGRESQL_PASSWORD
            value: ${POSTGRESQL_PASSWORD}
          - name: POSTGRESQL_DATABASE
            value: sonarqube
          image: ' '
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 5432
            timeoutSeconds: 1
          name: postgresql
          ports:
          - containerPort: 5432
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - psql -h 127.0.0.1 -U ${POSTGRESQL_USER} -q -d ${POSTGRESQL_DATABASE} -c 'SELECT 1'
            failureThreshold: 3
            initialDelaySeconds: 130
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 400m
              memory: 256Mi
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: postgresql-sonarqube
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: postgresql-sonarqube
          persistentVolumeClaim:
            claimName: postgresql-sonarqube
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - postgresql
        from:
          kind: ImageStreamTag
          name: postgresql:9.5
          namespace: openshift
      type: ImageChange
    - type: ConfigChange
########################################################################################################################
# Sonarqube image stream
########################################################################################################################
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: sonarqube
  spec:
    tags:
    - from:
        kind: DockerImage
        name: openshiftdemos/sonarqube:${SONARQUBE_VERSION}
      name: ${SONARQUBE_VERSION}
########################################################################################################################
# Sonarqube service
########################################################################################################################
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      service.openshift.io/infrastructure: "true"
    name: sonarqube
  spec:
    ports:
    - name: sonarqube
      port: 9000
      protocol: TCP
      targetPort: 9000
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    - name: 8443-tcp
      port: 8443
      protocol: TCP
      targetPort: 8443
    - name: 8778-tcp
      port: 8778
      protocol: TCP
      targetPort: 8778
    selector:
      deploymentconfig: sonarqube
    sessionAffinity: None
    type: ClusterIP
########################################################################################################################
# Sonarqube route
########################################################################################################################
- apiVersion: v1
  kind: Route
  metadata:
    annotations:
      description: Route for SonarQube's http service.
    name: sonarqube
    labels:
      app: sonarqube
  spec:
    tls:
      termination: edge
    to:
      kind: Service
      name: sonarqube
########################################################################################################################
# Sonarqube  persistent volume claim
########################################################################################################################
- kind: PersistentVolumeClaim
  apiVersion: v1
  metadata:
    name: sonarqube
  spec:
    accessModes:
      - ReadWriteOnce
    resources:
      requests:
        storage: 1Gi
########################################################################################################################
# Sonarqube deployment configuration
########################################################################################################################
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: sonarqube
  spec:
    replicas: 1
    selector:
      deploymentconfig: sonarqube
    strategy:
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          deploymentconfig: sonarqube
      spec:
        containers:
        - name: sonarqube
          image: ' '
          env:
          - name: SONARQUBE_JDBC_USERNAME
            value: ${POSTGRESQL_USER}
          - name: SONARQUBE_JDBC_PASSWORD
            value: ${POSTGRESQL_PASSWORD}
          - name: SONARQUBE_JDBC_URL
            value: jdbc:postgresql://postgresql-sonarqube/${POSTGRESQL_DATABASE}
          imagePullPolicy: IfNotPresent
          ports:
          - containerPort: 9000
            protocol: TCP
          - containerPort: 8080
            protocol: TCP
          - containerPort: 8443
            protocol: TCP
          - containerPort: 8778
            protocol: TCP
          livenessProbe:
            failureThreshold: 4
            initialDelaySeconds: 120
            periodSeconds: 20
            successThreshold: 1
            httpGet:
              port: 9000
              path: /
            timeoutSeconds: 5
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 130
            periodSeconds: 20
            successThreshold: 1
            httpGet:
              port: 9000
              path: /about
            timeoutSeconds: 5
          resources:
            requests:
              cpu: 200m
              memory: 1Gi
            limits:
              cpu: 1
              memory: 2Gi
          volumeMounts:
          - mountPath: /opt/sonarqube/data
            name: sonarqube
          terminationMessagePath: /dev/termination-log
        volumes:
        - name: sonarqube
          persistentVolumeClaim:
            claimName: sonarqube
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - sonarqube
        from:
          kind: ImageStreamTag
          name: sonarqube:${SONARQUBE_VERSION}
      type: ImageChange
